{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module filter\n *\n * @module     filter_multilang2/filter\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport {eventTypes, notifyFilterContentRenderingComplete} from 'core_filters/events';\n\nlet elements = [];\nlet data = [];\nlet onRequest = false;\nlet queue = [];\nlet retryInterval;\n\n/**\n * Queue filter event.\n * @param {CustomEvent} event\n */\nfunction queueFilter(event = null) {\n    queue.push({\n        event: event,\n        done: false,\n    });\n    runInterval();\n}\n\n/**\n * Rerun the interval to check for new data.\n */\nfunction runInterval() {\n    clearInterval(retryInterval);\n    retryInterval = setInterval(processQueue, 500);\n}\n\n/**\n * Process the queue of filter requests.\n * @returns {void}\n */\nfunction processQueue() {\n    clearInterval(retryInterval);\n    if (queue.length == 0) {\n        return;\n    }\n\n    if (onRequest) {\n        runInterval();\n        return;\n    }\n\n    let item;\n    for (let i = 0; i < queue.length; i++) {\n        item = queue[i];\n        if (item.done) {\n            queue.splice(i, 1);\n            continue;\n        }\n\n        if (item.event) {\n            break;\n        }\n\n        item = null;\n    }\n    if (item) {\n        runInterval();\n        filter(item.event);\n    }\n}\n\n/**\n * Process filtering.\n * @param {CustomEvent} event\n */\nasync function filter(event) {\n    if (onRequest) {\n        queueFilter(event);\n        return;\n    }\n\n    onRequest = true;\n    let contextid = M.cfg.contextid;\n    let selector;\n    if (event && event.originalEvent && event.originalEvent.detail.nodes) {\n        selector = event.originalEvent.detail.nodes;\n    } else {\n        selector = ['body'];\n    }\n\n    $.each(selector, function(index, element) {\n        // Get the element and its siblings.\n        // Modal not including footer and header in the event.\n        $(element).parent().children()\n                  .find('*')\n                  // Exclude some tricky.\n                  .not('script, link, noscript, iframe, embed, input, head, textarea')\n                  .each(function() {\n\n            let current = $(this);\n            if (current.children().length == 0 && current.text().toLowerCase().includes('mlang')) {\n                elements.push(this);\n                data.push(current.text());\n            }\n        });\n    });\n\n    let requests = Ajax.call([\n        {\n            methodname: 'filter_multilang2',\n            args: {\n                contextid: contextid,\n                data: data,\n            },\n        }\n    ]);\n\n    let response = await requests[0];\n    elements.forEach((element, index) => {\n        $(element).text(response[index]);\n    });\n\n    // Trigger events of what elements changed.\n    notifyFilterContentRenderingComplete(elements);\n\n    elements = [];\n    data = [];\n    onRequest = false;\n}\n\nexport const init = function() {\n    // Wait for the page to fully loaded.\n    $(filter);\n\n    // Apply the filter again if content changed.\n    $(document).on(eventTypes.filterContentUpdated, filter);\n};"],"names":["retryInterval","elements","data","onRequest","queue","runInterval","clearInterval","setInterval","processQueue","length","item","i","done","splice","event","filter","push","queueFilter","selector","contextid","M","cfg","originalEvent","detail","nodes","each","index","element","parent","children","find","not","current","this","text","toLowerCase","includes","requests","Ajax","call","methodname","args","response","forEach","document","on","eventTypes","filterContentUpdated"],"mappings":";;;;;;;kKA8BIA,cAJAC,SAAW,GACXC,KAAO,GACPC,WAAY,EACZC,MAAQ,YAkBHC,cACLC,cAAcN,eACdA,cAAgBO,YAAYC,aAAc,cAOrCA,kBACLF,cAAcN,eACM,GAAhBI,MAAMK,iBAINN,sBACAE,kBAIAK,SACC,IAAIC,EAAI,EAAGA,EAAIP,MAAMK,OAAQE,OAC9BD,KAAON,MAAMO,GACTD,KAAKE,KACLR,MAAMS,OAAOF,EAAG,WAIhBD,KAAKI,YAITJ,KAAO,KAEPA,OACAL,cACAU,OAAOL,KAAKI,uBAQLC,OAAOD,UACdX,qCAxDaW,6DAAQ,KACzBV,MAAMY,KAAK,CACPF,MAAOA,MACPF,MAAM,IAEVP,cAoDIY,CAAYH,OAIhBX,WAAY,MAERe,SADAC,UAAYC,EAAEC,IAAIF,UAGlBD,SADAJ,OAASA,MAAMQ,eAAiBR,MAAMQ,cAAcC,OAAOC,MAChDV,MAAMQ,cAAcC,OAAOC,MAE3B,CAAC,wBAGdC,KAAKP,UAAU,SAASQ,MAAOC,6BAG3BA,SAASC,SAASC,WACTC,KAAK,KAELC,IAAI,gEACJN,MAAK,eAERO,SAAU,mBAAEC,MACiB,GAA7BD,QAAQH,WAAWpB,QAAeuB,QAAQE,OAAOC,cAAcC,SAAS,WACxEnC,SAASe,KAAKiB,MACd/B,KAAKc,KAAKgB,QAAQE,mBAK1BG,SAAWC,cAAKC,KAAK,CACrB,CACIC,WAAY,oBACZC,KAAM,CACFtB,UAAWA,UACXjB,KAAMA,SAKdwC,eAAiBL,SAAS,GAC9BpC,SAAS0C,SAAQ,CAAChB,QAASD,6BACrBC,SAASO,KAAKQ,SAAShB,4DAIQzB,UAErCA,SAAW,GACXC,KAAO,GACPC,WAAY,gBAGI,+BAEdY,4BAGA6B,UAAUC,GAAGC,mBAAWC,qBAAsBhC"}