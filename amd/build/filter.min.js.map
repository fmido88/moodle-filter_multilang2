{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Apply multilang filter from the client side using ajax request.\n *\n * @module     filter_multilang2/filter\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport {eventTypes, notifyFilterContentRenderingComplete} from 'core_filters/events';\n\nlet elements = [];\nlet data = [];\nlet onRequest = false;\nlet queue = [];\nlet retryTimeout;\n\n/**\n * Queue filter event.\n * @param {CustomEvent} event\n */\nfunction queueFilter(event = null) {\n    queue.push({\n        event: event,\n        done: false,\n    });\n    runInterval();\n}\n/**\n * Stopping the queue.\n */\nfunction stopInterval() {\n    clearTimeout(retryTimeout);\n}\n/**\n * Rerun the interval to check for new data.\n */\nfunction runInterval() {\n    stopInterval();\n    retryTimeout = setTimeout(processQueue, 500);\n}\n\n/**\n * Process the queue of filter requests.\n * @returns {void}\n */\nfunction processQueue() {\n    clearTimeout(retryTimeout);\n    if (queue.length == 0) {\n        return;\n    }\n\n    if (onRequest) {\n        runInterval();\n        return;\n    }\n\n    let item;\n    for (let i = 0; i < queue.length; i++) {\n        item = queue[i];\n        if (item.done) {\n            queue.splice(i, 1);\n            continue;\n        }\n\n        if (item.event) {\n            break;\n        }\n\n        item = null;\n    }\n    if (item) {\n        runInterval();\n        filter(item.event);\n    }\n}\n\n/**\n * Process filtering.\n * @param {?CustomEvent} event\n */\nasync function filter(event = null) {\n    if (onRequest) {\n        queueFilter(event);\n        return;\n    }\n\n    onRequest = true;\n    let contextid = M.cfg.contextid;\n    let selectors;\n    if (event && event.originalEvent && event.originalEvent.detail.nodes) {\n        selectors = event.originalEvent.detail.nodes;\n    } else {\n        selectors = ['body'];\n    }\n\n    $.each(selectors, function(index, element) {\n\n        // Exclude head and scripts.\n        let exclude = 'script, noscript, head, style';\n        // Exclude resources.\n        exclude += ', img, video, audio, canvas, svg, object, embed, iframe, link, source';\n        // Exclude inputs.\n        exclude += ', input, textarea, [data-fieldtype=\"textarea\"], [data-fieldtype=\"editor\"]';\n        // Exclude editable elements as it considered inputs.\n        exclude += ', [contenteditable=\"true\"]';\n        // Exclude display elements.\n        exclude += ', code, pre';\n        // Manually ignored.\n        exclude += ', .ignore-multilang';\n\n        // Get the element and its siblings.\n        // Modal event for example not include footer and header in the event nodes.\n        $(element)\n        .parent().not(exclude)\n        .children().not(exclude)\n        .find('*').not(exclude)\n        .each(function() {\n            let parent = $(this);\n            if (parent.parents(exclude).length > 0) {\n                return;\n            }\n\n            parent.contents().each(function() {\n                if (this.nodeType === 3) { // Text node.\n                    if (this.textContent.toLowerCase().includes('mlang')) {\n                        elements.push(this);\n                        data.push(this.textContent);\n                    }\n                } else if (this.nodeType === 1) { // Element node.\n                    let current = $(this);\n\n                    if (current.is(exclude)) {\n                        return;\n                    }\n\n                    if (this.childNodes.length > 0) { // Only check final child.\n                        return;\n                    }\n\n                    if (elements.includes(this)) { // Already added.\n                        return;\n                    }\n\n                    if (current.text().toLowerCase().includes('mlang')) {\n                        elements.push(this);\n                        data.push(current.text());\n                    }\n                }\n            });\n        });\n    });\n\n    if (data.length == 0) {\n        elements = [];\n        data = [];\n        onRequest = false;\n        // Prevent sending empty data request.\n        return;\n    }\n\n    let requests = Ajax.call([\n        {\n            methodname: 'filter_multilang2',\n            args: {\n                contextid: contextid,\n                data: data,\n            },\n        }\n    ], true, false);\n\n    let response = await requests[0];\n    elements.forEach((element, index) => {\n        if (element.nodeType === 3) {\n            element.textContent = response[index];\n        } else {\n            $(element).text(response[index]);\n        }\n    });\n\n    // Trigger events of what elements changed.\n    notifyFilterContentRenderingComplete(elements);\n\n    elements = [];\n    data = [];\n    onRequest = false;\n}\n\nexport const init = function() {\n    // Wait for the page to fully loaded.\n    $(filter);\n\n    // Apply the filter again if content changed.\n    $(document).on(eventTypes.filterContentUpdated, filter);\n};"],"names":["retryTimeout","elements","data","onRequest","queue","queueFilter","event","push","done","runInterval","clearTimeout","setTimeout","processQueue","length","item","i","splice","filter","selectors","contextid","M","cfg","originalEvent","detail","nodes","each","index","element","exclude","parent","not","children","find","this","parents","contents","nodeType","textContent","toLowerCase","includes","current","is","childNodes","text","requests","Ajax","call","methodname","args","response","forEach","document","on","eventTypes","filterContentUpdated"],"mappings":";;;;;;;kKA8BIA,aAJAC,SAAW,GACXC,KAAO,GACPC,WAAY,EACZC,MAAQ,YAOHC,kBAAYC,6DAAQ,KACzBF,MAAMG,KAAK,CACPD,MAAOA,MACPE,MAAM,IAEVC,uBAWKA,cALLC,aAAaV,cAObA,aAAeW,WAAWC,aAAc,cAOnCA,kBACLF,aAAaV,cACO,GAAhBI,MAAMS,iBAINV,sBACAM,kBAIAK,SACC,IAAIC,EAAI,EAAGA,EAAIX,MAAMS,OAAQE,OAC9BD,KAAOV,MAAMW,GACTD,KAAKN,KACLJ,MAAMY,OAAOD,EAAG,WAIhBD,KAAKR,YAITQ,KAAO,KAEPA,OACAL,cACAQ,OAAOH,KAAKR,uBAQLW,aAAOX,6DAAQ,QACtBH,sBACAE,YAAYC,OAIhBH,WAAY,MAERe,UADAC,UAAYC,EAAEC,IAAIF,aAGlBD,UADAZ,OAASA,MAAMgB,eAAiBhB,MAAMgB,cAAcC,OAAOC,MAC/ClB,MAAMgB,cAAcC,OAAOC,MAE3B,CAAC,wBAGfC,KAAKP,WAAW,SAASQ,MAAOC,aAG1BC,QAAU,gCAEdA,SAAW,wEAEXA,SAAW,4EAEXA,SAAW,6BAEXA,SAAW,cAEXA,SAAW,0CAITD,SACDE,SAASC,IAAIF,SACbG,WAAWD,IAAIF,SACfI,KAAK,KAAKF,IAAIF,SACdH,MAAK,eACEI,QAAS,mBAAEI,MACXJ,OAAOK,QAAQN,SAASf,OAAS,GAIrCgB,OAAOM,WAAWV,MAAK,cACG,IAAlBQ,KAAKG,SACDH,KAAKI,YAAYC,cAAcC,SAAS,WACxCtC,SAASM,KAAK0B,MACd/B,KAAKK,KAAK0B,KAAKI,mBAEhB,GAAsB,IAAlBJ,KAAKG,SAAgB,KACxBI,SAAU,mBAAEP,SAEZO,QAAQC,GAAGb,mBAIXK,KAAKS,WAAW7B,OAAS,YAIzBZ,SAASsC,SAASN,aAIlBO,QAAQG,OAAOL,cAAcC,SAAS,WACtCtC,SAASM,KAAK0B,MACd/B,KAAKK,KAAKiC,QAAQG,mBAOnB,GAAfzC,KAAKW,cACLZ,SAAW,GACXC,KAAO,QACPC,WAAY,OAKZyC,SAAWC,cAAKC,KAAK,CACrB,CACIC,WAAY,oBACZC,KAAM,CACF7B,UAAWA,UACXjB,KAAMA,SAGf,GAAM,GAEL+C,eAAiBL,SAAS,GAC9B3C,SAASiD,SAAQ,CAACvB,QAASD,SACE,IAArBC,QAAQS,SACRT,QAAQU,YAAcY,SAASvB,2BAE7BC,SAASgB,KAAKM,SAASvB,4DAKIzB,UAErCA,SAAW,GACXC,KAAO,GACPC,WAAY,gBAGI,+BAEdc,4BAGAkC,UAAUC,GAAGC,mBAAWC,qBAAsBrC"}